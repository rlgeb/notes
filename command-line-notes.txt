
COMMANDS

aplay *.wav 

-plays a wav sound file

ifconfig
will show your ip address + more

whoami
-tell you what user you are running commands as

scp file username@ip:location.filename

nmap

tool for telling with ports are open on an ip

hydra
tool we used for ssh brute force cracking 

man ascii

-This prints out the ascii tables in octal, hexadeciamal and decimal. I can’t believe I didn’t know about this one until a month ago. I’d always resorted to googling for the tables. This is much more convenient.

cal
-pulls up a calendar

xxd
-can generate a hex dump of a given file, and also convert an edited hex dump back into its original binary form. It can also output the hex dump as a C array which is also super handy
xxd -i data.bin
-compare binary files by generating a hex dump of two files and then diff’ing them.

ssh
-logging into remote machines

-X-forwarding – connect to a remote machine and have any gui applications started, displayed as if they were started locally, even if the remote machine doesn’t have an X server.
-Port forwarding – forward a connection to a local port to a port on a remote machine OR forward connections to a port on a remote machine to a local port
-SOCKS proxy – allows you forward any connections of an application that supports SOCKS proxies through the remote host. Useful for more secure browsing over public wifi and for getting around overly restrictive firewalls.
-typing a password on your local machine once, then using a secure identity to login to several remote machines without having to retype your password by using an ssh key agent. This is awesome.

mdfind -name serach_term
-This one is specific to mac, as there are other *nix equivalents. It has similar functionality to find but uses the Spotlight index. It allows you to search your entire filesystem in seconds.


ps
    -process status.  displays the currently running processes.  Give you PID, TTY, TIME, CMD
ps aux
    -gives you many more details

USER = user owning the process
PID = process ID of the process
%CPU = It is the CPU time used divided by the time the process has been running.
%MEM = ratio of the process’s resident set size to the physical memory on the machine
VSZ = virtual memory usage of entire process
RSS = resident set size, the non-swapped physical memory that a task has used
TTY = controlling tty (terminal)
STAT = multi-character process state
START = starting time or date of the process
TIME = cumulative CPU time
COMMAND = command with all its arguments

awk '{print $2}
    -process files organized in rows and cols.  element of the 2nd col of each line

grep "search_phrase" "search_doc"
    -search. stout is default if no serach path provided

ls -l
    -tells you more about files such as privledges, size ect

cd -
    -back button for directory you are in 

shift + command + { or }
    -change termial tabs (left or right)

command + or -
    -make the txt bigger or smaller

-o "file1, file2, ..."
    -open multiple files

ctrl-w + v 
    -split vertically

ctrl-w + s
    -split horizonally

ps aux
    -show the running processes

|
    -pipe command. take output and use it as input for the next command

sv 
    -process management
    up : start

sudo
    -super user privlegdges

pwd 
    -current directory path

cd 
    -change directory

ls
    -list contents

screen -x 
    -share terminal screen while sshed into a box

php 
-a
    -interactive php in the terminal
-i 
    -php info    

top
    -displays processor activity
